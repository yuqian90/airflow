<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1350" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1333.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1333.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (pylib/tradesdb/brokerdataparser/chinafutureparser.py:10) (40 samples, 1.77%)</title><rect x="0.1769%" y="804" width="1.7691%" height="15" fill="rgb(227,0,7)"/><text x="0.4269%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (40 samples, 1.77%)</title><rect x="0.1769%" y="820" width="1.7691%" height="15" fill="rgb(217,0,24)"/><text x="0.4269%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (40 samples, 1.77%)</title><rect x="0.1769%" y="836" width="1.7691%" height="15" fill="rgb(221,193,54)"/><text x="0.4269%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (40 samples, 1.77%)</title><rect x="0.1769%" y="852" width="1.7691%" height="15" fill="rgb(248,212,6)"/><text x="0.4269%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (40 samples, 1.77%)</title><rect x="0.1769%" y="868" width="1.7691%" height="15" fill="rgb(208,68,35)"/><text x="0.4269%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (40 samples, 1.77%)</title><rect x="0.1769%" y="884" width="1.7691%" height="15" fill="rgb(232,128,0)"/><text x="0.4269%" y="894.50"></text></g><g><title>&lt;module&gt; (pylib/tradesdb/brokerdataparser/__init__.py:293) (41 samples, 1.81%)</title><rect x="0.1769%" y="708" width="1.8134%" height="15" fill="rgb(207,160,47)"/><text x="0.4269%" y="718.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (41 samples, 1.81%)</title><rect x="0.1769%" y="724" width="1.8134%" height="15" fill="rgb(228,23,34)"/><text x="0.4269%" y="734.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (41 samples, 1.81%)</title><rect x="0.1769%" y="740" width="1.8134%" height="15" fill="rgb(218,30,26)"/><text x="0.4269%" y="750.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (41 samples, 1.81%)</title><rect x="0.1769%" y="756" width="1.8134%" height="15" fill="rgb(220,122,19)"/><text x="0.4269%" y="766.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (41 samples, 1.81%)</title><rect x="0.1769%" y="772" width="1.8134%" height="15" fill="rgb(250,228,42)"/><text x="0.4269%" y="782.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (41 samples, 1.81%)</title><rect x="0.1769%" y="788" width="1.8134%" height="15" fill="rgb(240,193,28)"/><text x="0.4269%" y="798.50">_..</text></g><g><title>&lt;module&gt; (fx_daily_test.py:456) (672 samples, 29.72%)</title><rect x="0.0000%" y="596" width="29.7214%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="606.50">&lt;module&gt; (fx_daily_test.py:456)</text></g><g><title>make_upload_broker_tasks (airflowlib/tradesdb_tasks.py:839) (672 samples, 29.72%)</title><rect x="0.0000%" y="612" width="29.7214%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="622.50">make_upload_broker_tasks (airflowlib/tradesdb_ta..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (672 samples, 29.72%)</title><rect x="0.0000%" y="628" width="29.7214%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="638.50">_find_and_load (&lt;frozen importlib._bootstrap&gt;:97..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (672 samples, 29.72%)</title><rect x="0.0000%" y="644" width="29.7214%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="654.50">_find_and_load_unlocked (&lt;frozen importlib._boot..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (672 samples, 29.72%)</title><rect x="0.0000%" y="660" width="29.7214%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="670.50">_load_unlocked (&lt;frozen importlib._bootstrap&gt;:66..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (672 samples, 29.72%)</title><rect x="0.0000%" y="676" width="29.7214%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="686.50">exec_module (&lt;frozen importlib._bootstrap_extern..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (672 samples, 29.72%)</title><rect x="0.0000%" y="692" width="29.7214%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="702.50">_call_with_frames_removed (&lt;frozen importlib._bo..</text></g><g><title>&lt;module&gt; (pylib/tradesdb/brokerdataparser/__init__.py:8) (604 samples, 26.71%)</title><rect x="3.0075%" y="708" width="26.7138%" height="15" fill="rgb(226,26,5)"/><text x="3.2575%" y="718.50">&lt;module&gt; (pylib/tradesdb/brokerdataparser/_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:971) (604 samples, 26.71%)</title><rect x="3.0075%" y="724" width="26.7138%" height="15" fill="rgb(249,33,26)"/><text x="3.2575%" y="734.50">_find_and_load (&lt;frozen importlib._bootstra..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:955) (604 samples, 26.71%)</title><rect x="3.0075%" y="740" width="26.7138%" height="15" fill="rgb(235,183,28)"/><text x="3.2575%" y="750.50">_find_and_load_unlocked (&lt;frozen importlib...</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (604 samples, 26.71%)</title><rect x="3.0075%" y="756" width="26.7138%" height="15" fill="rgb(221,5,38)"/><text x="3.2575%" y="766.50">_load_unlocked (&lt;frozen importlib._bootstra..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (604 samples, 26.71%)</title><rect x="3.0075%" y="772" width="26.7138%" height="15" fill="rgb(247,18,42)"/><text x="3.2575%" y="782.50">exec_module (&lt;frozen importlib._bootstrap_e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (604 samples, 26.71%)</title><rect x="3.0075%" y="788" width="26.7138%" height="15" fill="rgb(241,131,45)"/><text x="3.2575%" y="798.50">_call_with_frames_removed (&lt;frozen importli..</text></g><g><title>&lt;module&gt; (pylib/tradesdb/brokerdataparser/canadaequitycibcparser.py:19) (604 samples, 26.71%)</title><rect x="3.0075%" y="804" width="26.7138%" height="15" fill="rgb(249,31,29)"/><text x="3.2575%" y="814.50">&lt;module&gt; (pylib/tradesdb/brokerdataparser/c..</text></g><g><title>CIBCCanadaParser (pylib/tradesdb/brokerdataparser/canadaequitycibcparser.py:21) (604 samples, 26.71%)</title><rect x="3.0075%" y="820" width="26.7138%" height="15" fill="rgb(225,111,53)"/><text x="3.2575%" y="830.50">CIBCCanadaParser (pylib/tradesdb/brokerdata..</text></g><g><title>process_file (airflow/jobs/scheduler_job.py:1594) (675 samples, 29.85%)</title><rect x="0.0000%" y="452" width="29.8540%" height="15" fill="rgb(238,160,17)"/><text x="0.2500%" y="462.50">process_file (airflow/jobs/scheduler_job.py:1594)</text></g><g><title>__init__ (airflow/models/dagbag.py:110) (675 samples, 29.85%)</title><rect x="0.0000%" y="468" width="29.8540%" height="15" fill="rgb(214,148,48)"/><text x="0.2500%" y="478.50">__init__ (airflow/models/dagbag.py:110)</text></g><g><title>collect_dags (airflow/models/dagbag.py:434) (675 samples, 29.85%)</title><rect x="0.0000%" y="484" width="29.8540%" height="15" fill="rgb(232,36,49)"/><text x="0.2500%" y="494.50">collect_dags (airflow/models/dagbag.py:434)</text></g><g><title>process_file (airflow/models/dagbag.py:256) (675 samples, 29.85%)</title><rect x="0.0000%" y="500" width="29.8540%" height="15" fill="rgb(209,103,24)"/><text x="0.2500%" y="510.50">process_file (airflow/models/dagbag.py:256)</text></g><g><title>load_source (imp.py:172) (675 samples, 29.85%)</title><rect x="0.0000%" y="516" width="29.8540%" height="15" fill="rgb(229,88,8)"/><text x="0.2500%" y="526.50">load_source (imp.py:172)</text></g><g><title>_load (&lt;frozen importlib._bootstrap&gt;:684) (675 samples, 29.85%)</title><rect x="0.0000%" y="532" width="29.8540%" height="15" fill="rgb(213,181,19)"/><text x="0.2500%" y="542.50">_load (&lt;frozen importlib._bootstrap&gt;:684)</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:665) (675 samples, 29.85%)</title><rect x="0.0000%" y="548" width="29.8540%" height="15" fill="rgb(254,191,54)"/><text x="0.2500%" y="558.50">_load_unlocked (&lt;frozen importlib._bootstrap&gt;:66..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:678) (675 samples, 29.85%)</title><rect x="0.0000%" y="564" width="29.8540%" height="15" fill="rgb(241,83,37)"/><text x="0.2500%" y="574.50">exec_module (&lt;frozen importlib._bootstrap_extern..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (675 samples, 29.85%)</title><rect x="0.0000%" y="580" width="29.8540%" height="15" fill="rgb(233,36,39)"/><text x="0.2500%" y="590.50">_call_with_frames_removed (&lt;frozen importlib._bo..</text></g><g><title>__init__ (sqlalchemy/sql/elements.py:1167) (30 samples, 1.33%)</title><rect x="34.5422%" y="868" width="1.3268%" height="15" fill="rgb(226,3,54)"/><text x="34.7922%" y="878.50"></text></g><g><title>sub (re.py:191) (23 samples, 1.02%)</title><rect x="34.8518%" y="884" width="1.0172%" height="15" fill="rgb(245,192,40)"/><text x="35.1018%" y="894.50"></text></g><g><title>__init__ (sqlalchemy/sql/elements.py:1168) (42 samples, 1.86%)</title><rect x="35.8691%" y="868" width="1.8576%" height="15" fill="rgb(238,167,29)"/><text x="36.1191%" y="878.50">_..</text></g><g><title>_in_impl (sqlalchemy/sql/default_comparator.py:212) (132 samples, 5.84%)</title><rect x="32.9058%" y="836" width="5.8381%" height="15" fill="rgb(232,182,51)"/><text x="33.1558%" y="846.50">_in_imp..</text></g><g><title>_bind_param (sqlalchemy/sql/elements.py:4117) (123 samples, 5.44%)</title><rect x="33.3038%" y="852" width="5.4401%" height="15" fill="rgb(231,60,39)"/><text x="33.5538%" y="862.50">_bind_p..</text></g><g><title>get_task_instances (airflow/models/dag.py:847) (174 samples, 7.70%)</title><rect x="31.8443%" y="628" width="7.6957%" height="15" fill="rgb(208,69,12)"/><text x="32.0943%" y="638.50">get_task_in..</text></g><g><title>in_ (sqlalchemy/sql/operators.py:604) (165 samples, 7.30%)</title><rect x="32.2424%" y="644" width="7.2977%" height="15" fill="rgb(235,93,37)"/><text x="32.4924%" y="654.50">in_ (sqlal..</text></g><g><title>operate (sqlalchemy/orm/attributes.py:217) (165 samples, 7.30%)</title><rect x="32.2424%" y="660" width="7.2977%" height="15" fill="rgb(213,116,39)"/><text x="32.4924%" y="670.50">operate (s..</text></g><g><title>in_op (sqlalchemy/sql/operators.py:1260) (165 samples, 7.30%)</title><rect x="32.2424%" y="676" width="7.2977%" height="15" fill="rgb(222,207,29)"/><text x="32.4924%" y="686.50">in_op (sql..</text></g><g><title>in_ (sqlalchemy/sql/operators.py:604) (165 samples, 7.30%)</title><rect x="32.2424%" y="692" width="7.2977%" height="15" fill="rgb(206,96,30)"/><text x="32.4924%" y="702.50">in_ (sqlal..</text></g><g><title>operate (sqlalchemy/orm/properties.py:315) (165 samples, 7.30%)</title><rect x="32.2424%" y="708" width="7.2977%" height="15" fill="rgb(218,138,4)"/><text x="32.4924%" y="718.50">operate (s..</text></g><g><title>in_op (sqlalchemy/sql/operators.py:1260) (165 samples, 7.30%)</title><rect x="32.2424%" y="724" width="7.2977%" height="15" fill="rgb(250,191,14)"/><text x="32.4924%" y="734.50">in_op (sql..</text></g><g><title>in_ (sqlalchemy/sql/operators.py:604) (165 samples, 7.30%)</title><rect x="32.2424%" y="740" width="7.2977%" height="15" fill="rgb(239,60,40)"/><text x="32.4924%" y="750.50">in_ (sqlal..</text></g><g><title>operate (sqlalchemy/sql/elements.py:725) (165 samples, 7.30%)</title><rect x="32.2424%" y="756" width="7.2977%" height="15" fill="rgb(206,27,48)"/><text x="32.4924%" y="766.50">operate (s..</text></g><g><title>in_op (sqlalchemy/sql/operators.py:1260) (165 samples, 7.30%)</title><rect x="32.2424%" y="772" width="7.2977%" height="15" fill="rgb(225,35,8)"/><text x="32.4924%" y="782.50">in_op (sql..</text></g><g><title>in_ (sqlalchemy/sql/operators.py:604) (165 samples, 7.30%)</title><rect x="32.2424%" y="788" width="7.2977%" height="15" fill="rgb(250,213,24)"/><text x="32.4924%" y="798.50">in_ (sqlal..</text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (165 samples, 7.30%)</title><rect x="32.2424%" y="804" width="7.2977%" height="15" fill="rgb(247,123,22)"/><text x="32.4924%" y="814.50">&lt;lambda&gt; (..</text></g><g><title>operate (sqlalchemy/sql/type_api.py:67) (165 samples, 7.30%)</title><rect x="32.2424%" y="820" width="7.2977%" height="15" fill="rgb(231,138,38)"/><text x="32.4924%" y="830.50">operate (s..</text></g><g><title>&lt;listcomp&gt; (sqlalchemy/sql/compiler.py:2114) (29 samples, 1.28%)</title><rect x="40.7784%" y="868" width="1.2826%" height="15" fill="rgb(231,145,46)"/><text x="41.0284%" y="878.50"></text></g><g><title>_label_select_column (sqlalchemy/sql/compiler.py:1866) (26 samples, 1.15%)</title><rect x="40.9111%" y="884" width="1.1499%" height="15" fill="rgb(251,118,11)"/><text x="41.1611%" y="894.50"></text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (25 samples, 1.11%)</title><rect x="40.9553%" y="900" width="1.1057%" height="15" fill="rgb(217,147,25)"/><text x="41.2053%" y="910.50"></text></g><g><title>visit_label (sqlalchemy/sql/compiler.py:829) (23 samples, 1.02%)</title><rect x="41.0438%" y="916" width="1.0172%" height="15" fill="rgb(247,81,37)"/><text x="41.2938%" y="926.50"></text></g><g><title>visit_select (sqlalchemy/sql/compiler.py:2114) (31 samples, 1.37%)</title><rect x="40.7784%" y="852" width="1.3711%" height="15" fill="rgb(209,12,38)"/><text x="41.0284%" y="862.50"></text></g><g><title>visit_bindparam (sqlalchemy/sql/compiler.py:1470) (36 samples, 1.59%)</title><rect x="43.1225%" y="1236" width="1.5922%" height="15" fill="rgb(227,1,9)"/><text x="43.3725%" y="1246.50"></text></g><g><title>dialect_impl (sqlalchemy/sql/type_api.py:456) (26 samples, 1.15%)</title><rect x="43.5648%" y="1252" width="1.1499%" height="15" fill="rgb(248,47,43)"/><text x="43.8148%" y="1262.50"></text></g><g><title>_truncated_identifier (sqlalchemy/sql/compiler.py:1561) (43 samples, 1.90%)</title><rect x="45.8647%" y="1268" width="1.9018%" height="15" fill="rgb(221,10,30)"/><text x="46.1147%" y="1278.50">_..</text></g><g><title>apply_map (sqlalchemy/sql/elements.py:4413) (35 samples, 1.55%)</title><rect x="46.2185%" y="1284" width="1.5480%" height="15" fill="rgb(210,229,1)"/><text x="46.4685%" y="1294.50"></text></g><g><title>__missing__ (sqlalchemy/util/_collections.py:734) (26 samples, 1.15%)</title><rect x="46.6165%" y="1300" width="1.1499%" height="15" fill="rgb(222,148,37)"/><text x="46.8665%" y="1310.50"></text></g><g><title>_truncate_bindparam (sqlalchemy/sql/compiler.py:1550) (60 samples, 2.65%)</title><rect x="45.3782%" y="1252" width="2.6537%" height="15" fill="rgb(234,67,33)"/><text x="45.6282%" y="1262.50">_t..</text></g><g><title>visit_bindparam (sqlalchemy/sql/compiler.py:1491) (74 samples, 3.27%)</title><rect x="44.8916%" y="1236" width="3.2729%" height="15" fill="rgb(247,98,35)"/><text x="45.1416%" y="1246.50">vis..</text></g><g><title>visit_binary (sqlalchemy/sql/compiler.py:1298) (152 samples, 6.72%)</title><rect x="42.3706%" y="1092" width="6.7227%" height="15" fill="rgb(247,138,52)"/><text x="42.6206%" y="1102.50">visit_bin..</text></g><g><title>_generate_generic_binary (sqlalchemy/sql/compiler.py:1346) (152 samples, 6.72%)</title><rect x="42.3706%" y="1108" width="6.7227%" height="15" fill="rgb(213,79,30)"/><text x="42.6206%" y="1118.50">_generate..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (152 samples, 6.72%)</title><rect x="42.3706%" y="1124" width="6.7227%" height="15" fill="rgb(246,177,23)"/><text x="42.6206%" y="1134.50">_compiler..</text></g><g><title>visit_grouping (sqlalchemy/sql/compiler.py:727) (152 samples, 6.72%)</title><rect x="42.3706%" y="1140" width="6.7227%" height="15" fill="rgb(230,62,27)"/><text x="42.6206%" y="1150.50">visit_gro..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (152 samples, 6.72%)</title><rect x="42.3706%" y="1156" width="6.7227%" height="15" fill="rgb(216,154,8)"/><text x="42.6206%" y="1166.50">_compiler..</text></g><g><title>visit_clauselist (sqlalchemy/sql/compiler.py:982) (152 samples, 6.72%)</title><rect x="42.3706%" y="1172" width="6.7227%" height="15" fill="rgb(244,35,45)"/><text x="42.6206%" y="1182.50">visit_cla..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:980) (150 samples, 6.63%)</title><rect x="42.4591%" y="1188" width="6.6342%" height="15" fill="rgb(251,115,12)"/><text x="42.7091%" y="1198.50">&lt;genexpr&gt;..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:982) (150 samples, 6.63%)</title><rect x="42.4591%" y="1204" width="6.6342%" height="15" fill="rgb(240,54,50)"/><text x="42.7091%" y="1214.50">&lt;genexpr&gt;..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (140 samples, 6.19%)</title><rect x="42.9014%" y="1220" width="6.1920%" height="15" fill="rgb(233,84,52)"/><text x="43.1514%" y="1230.50">_compile..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1092) (192 samples, 8.49%)</title><rect x="40.6457%" y="724" width="8.4918%" height="15" fill="rgb(207,117,47)"/><text x="40.8957%" y="734.50">_execute_cla..</text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (192 samples, 8.49%)</title><rect x="40.6457%" y="740" width="8.4918%" height="15" fill="rgb(249,43,39)"/><text x="40.8957%" y="750.50">&lt;lambda&gt; (&lt;s..</text></g><g><title>compile (sqlalchemy/sql/elements.py:462) (192 samples, 8.49%)</title><rect x="40.6457%" y="756" width="8.4918%" height="15" fill="rgb(209,38,44)"/><text x="40.8957%" y="766.50">compile (sql..</text></g><g><title>_compiler (sqlalchemy/sql/elements.py:468) (192 samples, 8.49%)</title><rect x="40.6457%" y="772" width="8.4918%" height="15" fill="rgb(236,212,23)"/><text x="40.8957%" y="782.50">_compiler (s..</text></g><g><title>__init__ (sqlalchemy/sql/compiler.py:571) (192 samples, 8.49%)</title><rect x="40.6457%" y="788" width="8.4918%" height="15" fill="rgb(242,79,21)"/><text x="40.8957%" y="798.50">__init__ (sq..</text></g><g><title>__init__ (sqlalchemy/sql/compiler.py:319) (192 samples, 8.49%)</title><rect x="40.6457%" y="804" width="8.4918%" height="15" fill="rgb(211,96,35)"/><text x="40.8957%" y="814.50">__init__ (sq..</text></g><g><title>process (sqlalchemy/sql/compiler.py:350) (192 samples, 8.49%)</title><rect x="40.6457%" y="820" width="8.4918%" height="15" fill="rgb(253,215,40)"/><text x="40.8957%" y="830.50">process (sql..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (192 samples, 8.49%)</title><rect x="40.6457%" y="836" width="8.4918%" height="15" fill="rgb(211,81,21)"/><text x="40.8957%" y="846.50">_compiler_di..</text></g><g><title>visit_select (sqlalchemy/sql/compiler.py:2139) (158 samples, 6.99%)</title><rect x="42.1495%" y="852" width="6.9881%" height="15" fill="rgb(208,190,38)"/><text x="42.3995%" y="862.50">visit_sel..</text></g><g><title>_compose_select_body (sqlalchemy/sql/compiler.py:2238) (158 samples, 6.99%)</title><rect x="42.1495%" y="868" width="6.9881%" height="15" fill="rgb(235,213,38)"/><text x="42.3995%" y="878.50">_compose_..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (158 samples, 6.99%)</title><rect x="42.1495%" y="884" width="6.9881%" height="15" fill="rgb(237,122,38)"/><text x="42.3995%" y="894.50">_compiler..</text></g><g><title>visit_clauselist (sqlalchemy/sql/compiler.py:982) (158 samples, 6.99%)</title><rect x="42.1495%" y="900" width="6.9881%" height="15" fill="rgb(244,218,35)"/><text x="42.3995%" y="910.50">visit_cla..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:980) (158 samples, 6.99%)</title><rect x="42.1495%" y="916" width="6.9881%" height="15" fill="rgb(240,68,47)"/><text x="42.3995%" y="926.50">&lt;genexpr&gt;..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:982) (158 samples, 6.99%)</title><rect x="42.1495%" y="932" width="6.9881%" height="15" fill="rgb(210,16,53)"/><text x="42.3995%" y="942.50">&lt;genexpr&gt;..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (158 samples, 6.99%)</title><rect x="42.1495%" y="948" width="6.9881%" height="15" fill="rgb(235,124,12)"/><text x="42.3995%" y="958.50">_compiler..</text></g><g><title>visit_clauselist (sqlalchemy/sql/compiler.py:982) (156 samples, 6.90%)</title><rect x="42.2379%" y="964" width="6.8996%" height="15" fill="rgb(224,169,11)"/><text x="42.4879%" y="974.50">visit_cla..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:980) (156 samples, 6.90%)</title><rect x="42.2379%" y="980" width="6.8996%" height="15" fill="rgb(250,166,2)"/><text x="42.4879%" y="990.50">&lt;genexpr&gt;..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:982) (156 samples, 6.90%)</title><rect x="42.2379%" y="996" width="6.8996%" height="15" fill="rgb(242,216,29)"/><text x="42.4879%" y="1006.50">&lt;genexpr&gt;..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (156 samples, 6.90%)</title><rect x="42.2379%" y="1012" width="6.8996%" height="15" fill="rgb(230,116,27)"/><text x="42.4879%" y="1022.50">_compiler..</text></g><g><title>visit_clauselist (sqlalchemy/sql/compiler.py:982) (153 samples, 6.77%)</title><rect x="42.3706%" y="1028" width="6.7669%" height="15" fill="rgb(228,99,48)"/><text x="42.6206%" y="1038.50">visit_cla..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:980) (153 samples, 6.77%)</title><rect x="42.3706%" y="1044" width="6.7669%" height="15" fill="rgb(253,11,6)"/><text x="42.6206%" y="1054.50">&lt;genexpr&gt;..</text></g><g><title>&lt;genexpr&gt; (sqlalchemy/sql/compiler.py:982) (153 samples, 6.77%)</title><rect x="42.3706%" y="1060" width="6.7669%" height="15" fill="rgb(247,143,39)"/><text x="42.6206%" y="1070.50">&lt;genexpr&gt;..</text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (153 samples, 6.77%)</title><rect x="42.3706%" y="1076" width="6.7669%" height="15" fill="rgb(236,97,10)"/><text x="42.6206%" y="1086.50">_compiler..</text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1246) (167 samples, 7.39%)</title><rect x="49.8894%" y="740" width="7.3861%" height="15" fill="rgb(233,208,19)"/><text x="50.1394%" y="750.50">_execute_c..</text></g><g><title>do_execute (sqlalchemy/engine/default.py:581) (167 samples, 7.39%)</title><rect x="49.8894%" y="756" width="7.3861%" height="15" fill="rgb(216,164,2)"/><text x="50.1394%" y="766.50">do_execute..</text></g><g><title>__iter__ (sqlalchemy/orm/query.py:3367) (388 samples, 17.16%)</title><rect x="40.2477%" y="660" width="17.1605%" height="15" fill="rgb(220,129,5)"/><text x="40.4977%" y="670.50">__iter__ (sqlalchemy/orm/qu..</text></g><g><title>_execute_and_instances (sqlalchemy/orm/query.py:3392) (380 samples, 16.81%)</title><rect x="40.6015%" y="676" width="16.8067%" height="15" fill="rgb(242,17,10)"/><text x="40.8515%" y="686.50">_execute_and_instances (sq..</text></g><g><title>execute (sqlalchemy/engine/base.py:982) (380 samples, 16.81%)</title><rect x="40.6015%" y="692" width="16.8067%" height="15" fill="rgb(242,107,0)"/><text x="40.8515%" y="702.50">execute (sqlalchemy/engine..</text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:287) (380 samples, 16.81%)</title><rect x="40.6015%" y="708" width="16.8067%" height="15" fill="rgb(251,28,31)"/><text x="40.8515%" y="718.50">_execute_on_connection (sq..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1101) (187 samples, 8.27%)</title><rect x="49.1375%" y="724" width="8.2707%" height="15" fill="rgb(233,223,10)"/><text x="49.3875%" y="734.50">_execute_cla..</text></g><g><title>__init__ (psycopg2/tz.py:57) (47 samples, 2.08%)</title><rect x="60.5927%" y="708" width="2.0787%" height="15" fill="rgb(215,21,27)"/><text x="60.8427%" y="718.50">_..</text></g><g><title>_fetchall_impl (sqlalchemy/engine/result.py:1161) (126 samples, 5.57%)</title><rect x="57.4967%" y="692" width="5.5728%" height="15" fill="rgb(232,23,21)"/><text x="57.7467%" y="702.50">_fetcha..</text></g><g><title>instances (sqlalchemy/orm/loading.py:77) (128 samples, 5.66%)</title><rect x="57.4967%" y="660" width="5.6612%" height="15" fill="rgb(244,5,23)"/><text x="57.7467%" y="670.50">instanc..</text></g><g><title>fetchall (sqlalchemy/engine/result.py:1211) (128 samples, 5.66%)</title><rect x="57.4967%" y="676" width="5.6612%" height="15" fill="rgb(226,81,46)"/><text x="57.7467%" y="686.50">fetchal..</text></g><g><title>fromutc (pendulum/tz/timezone.py:526) (26 samples, 1.15%)</title><rect x="65.8558%" y="756" width="1.1499%" height="15" fill="rgb(247,70,30)"/><text x="66.1058%" y="766.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:510) (81 samples, 3.58%)</title><rect x="63.6002%" y="692" width="3.5825%" height="15" fill="rgb(212,68,19)"/><text x="63.8502%" y="702.50">_ins..</text></g><g><title>&lt;listcomp&gt; (sqlalchemy/orm/loading.py:510) (61 samples, 2.70%)</title><rect x="64.4847%" y="708" width="2.6979%" height="15" fill="rgb(240,187,13)"/><text x="64.7347%" y="718.50">&lt;l..</text></g><g><title>process (sqlalchemy/sql/type_api.py:1271) (54 samples, 2.39%)</title><rect x="64.7943%" y="724" width="2.3883%" height="15" fill="rgb(223,113,26)"/><text x="65.0443%" y="734.50">pr..</text></g><g><title>process_result_value (airflow/utils/sqlalchemy.py:121) (49 samples, 2.17%)</title><rect x="65.0155%" y="740" width="2.1672%" height="15" fill="rgb(206,192,2)"/><text x="65.2655%" y="750.50">p..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:514) (23 samples, 1.02%)</title><rect x="67.2711%" y="692" width="1.0172%" height="15" fill="rgb(241,108,4)"/><text x="67.5211%" y="702.50"></text></g><g><title>__init__ (sqlalchemy/orm/state.py:92) (24 samples, 1.06%)</title><rect x="69.1729%" y="724" width="1.0615%" height="15" fill="rgb(247,173,49)"/><text x="69.4229%" y="734.50"></text></g><g><title>new_instance (sqlalchemy/orm/instrumentation.py:343) (71 samples, 3.14%)</title><rect x="68.7749%" y="708" width="3.1402%" height="15" fill="rgb(224,114,35)"/><text x="69.0249%" y="718.50">new..</text></g><g><title>__init__ (sqlalchemy/orm/state.py:94) (24 samples, 1.06%)</title><rect x="70.8536%" y="724" width="1.0615%" height="15" fill="rgb(245,159,27)"/><text x="71.1036%" y="734.50"></text></g><g><title>_instance (sqlalchemy/orm/loading.py:540) (96 samples, 4.25%)</title><rect x="68.4653%" y="692" width="4.2459%" height="15" fill="rgb(245,172,44)"/><text x="68.7153%" y="702.50">_inst..</text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:694) (24 samples, 1.06%)</title><rect x="74.0823%" y="708" width="1.0615%" height="15" fill="rgb(236,23,11)"/><text x="74.3323%" y="718.50"></text></g><g><title>load (dill/_dill.py:299) (51 samples, 2.26%)</title><rect x="78.6820%" y="756" width="2.2556%" height="15" fill="rgb(205,117,38)"/><text x="78.9320%" y="766.50">l..</text></g><g><title>__init__ (dill/_dill.py:478) (25 samples, 1.11%)</title><rect x="82.3972%" y="772" width="1.1057%" height="15" fill="rgb(237,72,25)"/><text x="82.6472%" y="782.50"></text></g><g><title>load (dill/_dill.py:301) (59 samples, 2.61%)</title><rect x="81.0261%" y="756" width="2.6095%" height="15" fill="rgb(244,70,9)"/><text x="81.2761%" y="766.50">lo..</text></g><g><title>process (sqlalchemy/sql/sqltypes.py:1684) (162 samples, 7.16%)</title><rect x="77.7974%" y="724" width="7.1650%" height="15" fill="rgb(217,125,39)"/><text x="78.0474%" y="734.50">process (s..</text></g><g><title>loads (dill/_dill.py:317) (152 samples, 6.72%)</title><rect x="78.2397%" y="740" width="6.7227%" height="15" fill="rgb(235,36,10)"/><text x="78.4897%" y="750.50">loads (di..</text></g><g><title>process_result_value (airflow/utils/sqlalchemy.py:121) (121 samples, 5.35%)</title><rect x="85.3605%" y="740" width="5.3516%" height="15" fill="rgb(251,123,47)"/><text x="85.6105%" y="750.50">process..</text></g><g><title>fromutc (pendulum/tz/timezone.py:526) (76 samples, 3.36%)</title><rect x="87.3507%" y="756" width="3.3613%" height="15" fill="rgb(221,13,13)"/><text x="87.6007%" y="766.50">fro..</text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:695) (353 samples, 15.61%)</title><rect x="75.1437%" y="708" width="15.6126%" height="15" fill="rgb(238,131,9)"/><text x="75.3937%" y="718.50">_populate_full (sqlalche..</text></g><g><title>process (sqlalchemy/sql/type_api.py:1271) (131 samples, 5.79%)</title><rect x="84.9624%" y="724" width="5.7939%" height="15" fill="rgb(211,50,8)"/><text x="85.2124%" y="734.50">process..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:574) (385 samples, 17.03%)</title><rect x="73.9054%" y="692" width="17.0279%" height="15" fill="rgb(245,182,24)"/><text x="74.1554%" y="702.50">_instance (sqlalchemy/orm/..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:580) (30 samples, 1.33%)</title><rect x="90.9332%" y="692" width="1.3268%" height="15" fill="rgb(242,14,37)"/><text x="91.1832%" y="702.50"></text></g><g><title>instances (sqlalchemy/orm/loading.py:81) (662 samples, 29.28%)</title><rect x="63.1579%" y="660" width="29.2791%" height="15" fill="rgb(246,228,12)"/><text x="63.4079%" y="670.50">instances (sqlalchemy/orm/loading.py:81)</text></g><g><title>&lt;listcomp&gt; (sqlalchemy/orm/loading.py:81) (662 samples, 29.28%)</title><rect x="63.1579%" y="676" width="29.2791%" height="15" fill="rgb(213,55,15)"/><text x="63.4079%" y="686.50">&lt;listcomp&gt; (sqlalchemy/orm/loading.py:81)</text></g><g><title>_get_dep_statuses (airflow/ti_deps/deps/not_previously_skipped_dep.py:46) (1,381 samples, 61.08%)</title><rect x="31.7559%" y="580" width="61.0792%" height="15" fill="rgb(209,9,3)"/><text x="32.0059%" y="590.50">_get_dep_statuses (airflow/ti_deps/deps/not_previously_skipped_dep.py:46)</text></g><g><title>ensure_finished_tasks (airflow/ti_deps/dep_context.py:110) (1,381 samples, 61.08%)</title><rect x="31.7559%" y="596" width="61.0792%" height="15" fill="rgb(230,59,30)"/><text x="32.0059%" y="606.50">ensure_finished_tasks (airflow/ti_deps/dep_context.py:110)</text></g><g><title>wrapper (airflow/utils/db.py:70) (1,380 samples, 61.03%)</title><rect x="31.8001%" y="612" width="61.0349%" height="15" fill="rgb(209,121,21)"/><text x="32.0501%" y="622.50">wrapper (airflow/utils/db.py:70)</text></g><g><title>get_task_instances (airflow/models/dag.py:867) (1,203 samples, 53.21%)</title><rect x="39.6285%" y="628" width="53.2065%" height="15" fill="rgb(220,109,13)"/><text x="39.8785%" y="638.50">get_task_instances (airflow/models/dag.py:867)</text></g><g><title>all (sqlalchemy/orm/query.py:3211) (1,203 samples, 53.21%)</title><rect x="39.6285%" y="644" width="53.2065%" height="15" fill="rgb(232,18,1)"/><text x="39.8785%" y="654.50">all (sqlalchemy/orm/query.py:3211)</text></g><g><title>_get_dep_statuses (airflow/ti_deps/deps/not_previously_skipped_dep.py:58) (29 samples, 1.28%)</title><rect x="93.0562%" y="580" width="1.2826%" height="15" fill="rgb(215,41,42)"/><text x="93.3062%" y="590.50"></text></g><g><title>xcom_pull (airflow/models/taskinstance.py:1564) (29 samples, 1.28%)</title><rect x="93.0562%" y="596" width="1.2826%" height="15" fill="rgb(224,123,36)"/><text x="93.3062%" y="606.50"></text></g><g><title>wrapper (airflow/utils/db.py:74) (26 samples, 1.15%)</title><rect x="93.1889%" y="612" width="1.1499%" height="15" fill="rgb(240,125,3)"/><text x="93.4389%" y="622.50"></text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1092) (25 samples, 1.11%)</title><rect x="96.0637%" y="692" width="1.1057%" height="15" fill="rgb(205,98,50)"/><text x="96.3137%" y="702.50"></text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (25 samples, 1.11%)</title><rect x="96.0637%" y="708" width="1.1057%" height="15" fill="rgb(205,185,37)"/><text x="96.3137%" y="718.50"></text></g><g><title>compile (sqlalchemy/sql/elements.py:462) (25 samples, 1.11%)</title><rect x="96.0637%" y="724" width="1.1057%" height="15" fill="rgb(238,207,15)"/><text x="96.3137%" y="734.50"></text></g><g><title>_compiler (sqlalchemy/sql/elements.py:468) (25 samples, 1.11%)</title><rect x="96.0637%" y="740" width="1.1057%" height="15" fill="rgb(213,199,42)"/><text x="96.3137%" y="750.50"></text></g><g><title>__init__ (sqlalchemy/sql/compiler.py:571) (25 samples, 1.11%)</title><rect x="96.0637%" y="756" width="1.1057%" height="15" fill="rgb(235,201,11)"/><text x="96.3137%" y="766.50"></text></g><g><title>__init__ (sqlalchemy/sql/compiler.py:319) (25 samples, 1.11%)</title><rect x="96.0637%" y="772" width="1.1057%" height="15" fill="rgb(207,46,11)"/><text x="96.3137%" y="782.50"></text></g><g><title>process (sqlalchemy/sql/compiler.py:350) (25 samples, 1.11%)</title><rect x="96.0637%" y="788" width="1.1057%" height="15" fill="rgb(241,35,35)"/><text x="96.3137%" y="798.50"></text></g><g><title>_compiler_dispatch (sqlalchemy/sql/visitors.py:92) (25 samples, 1.11%)</title><rect x="96.0637%" y="804" width="1.1057%" height="15" fill="rgb(243,32,47)"/><text x="96.3137%" y="814.50"></text></g><g><title>__iter__ (sqlalchemy/orm/query.py:3367) (36 samples, 1.59%)</title><rect x="95.7541%" y="628" width="1.5922%" height="15" fill="rgb(247,202,23)"/><text x="96.0041%" y="638.50"></text></g><g><title>_execute_and_instances (sqlalchemy/orm/query.py:3392) (29 samples, 1.28%)</title><rect x="96.0637%" y="644" width="1.2826%" height="15" fill="rgb(219,102,11)"/><text x="96.3137%" y="654.50"></text></g><g><title>execute (sqlalchemy/engine/base.py:982) (29 samples, 1.28%)</title><rect x="96.0637%" y="660" width="1.2826%" height="15" fill="rgb(243,110,44)"/><text x="96.3137%" y="670.50"></text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:287) (29 samples, 1.28%)</title><rect x="96.0637%" y="676" width="1.2826%" height="15" fill="rgb(222,74,54)"/><text x="96.3137%" y="686.50"></text></g><g><title>_get_dep_statuses (airflow/ti_deps/deps/trigger_rule_dep.py:78) (42 samples, 1.86%)</title><rect x="95.6214%" y="580" width="1.8576%" height="15" fill="rgb(216,99,12)"/><text x="95.8714%" y="590.50">_..</text></g><g><title>first (sqlalchemy/orm/query.py:3265) (42 samples, 1.86%)</title><rect x="95.6214%" y="596" width="1.8576%" height="15" fill="rgb(226,22,26)"/><text x="95.8714%" y="606.50">f..</text></g><g><title>__getitem__ (sqlalchemy/orm/query.py:3043) (41 samples, 1.81%)</title><rect x="95.6656%" y="612" width="1.8134%" height="15" fill="rgb(217,163,10)"/><text x="95.9156%" y="622.50">_..</text></g><g><title>_merge (sqlalchemy/orm/session.py:2177) (33 samples, 1.46%)</title><rect x="97.5674%" y="660" width="1.4595%" height="15" fill="rgb(213,25,53)"/><text x="97.8174%" y="670.50"></text></g><g><title>get (sqlalchemy/orm/query.py:982) (33 samples, 1.46%)</title><rect x="97.5674%" y="676" width="1.4595%" height="15" fill="rgb(252,105,26)"/><text x="97.8174%" y="686.50"></text></g><g><title>_get_impl (sqlalchemy/orm/query.py:1094) (32 samples, 1.42%)</title><rect x="97.6117%" y="692" width="1.4153%" height="15" fill="rgb(220,39,43)"/><text x="97.8617%" y="702.50"></text></g><g><title>load_on_pk_identity (sqlalchemy/orm/loading.py:284) (31 samples, 1.37%)</title><rect x="97.6559%" y="708" width="1.3711%" height="15" fill="rgb(229,68,48)"/><text x="97.9059%" y="718.50"></text></g><g><title>one (sqlalchemy/orm/query.py:3325) (31 samples, 1.37%)</title><rect x="97.6559%" y="724" width="1.3711%" height="15" fill="rgb(252,8,32)"/><text x="97.9059%" y="734.50"></text></g><g><title>one_or_none (sqlalchemy/orm/query.py:3294) (31 samples, 1.37%)</title><rect x="97.6559%" y="740" width="1.3711%" height="15" fill="rgb(223,20,43)"/><text x="97.9059%" y="750.50"></text></g><g><title>set_state (airflow/models/taskinstance.py:541) (35 samples, 1.55%)</title><rect x="97.5674%" y="628" width="1.5480%" height="15" fill="rgb(229,81,49)"/><text x="97.8174%" y="638.50"></text></g><g><title>merge (sqlalchemy/orm/session.py:2104) (35 samples, 1.55%)</title><rect x="97.5674%" y="644" width="1.5480%" height="15" fill="rgb(236,28,36)"/><text x="97.8174%" y="654.50"></text></g><g><title>_evaluate_trigger_rule (airflow/ti_deps/deps/trigger_rule_dep.py:143) (55 samples, 2.43%)</title><rect x="97.4790%" y="596" width="2.4326%" height="15" fill="rgb(249,185,26)"/><text x="97.7290%" y="606.50">_e..</text></g><g><title>wrapper (airflow/utils/db.py:70) (55 samples, 2.43%)</title><rect x="97.4790%" y="612" width="2.4326%" height="15" fill="rgb(249,174,33)"/><text x="97.7290%" y="622.50">wr..</text></g><g><title>get_dep_statuses (airflow/ti_deps/deps/base_ti_dep.py:106) (1,542 samples, 68.20%)</title><rect x="31.7559%" y="564" width="68.1999%" height="15" fill="rgb(233,201,37)"/><text x="32.0059%" y="574.50">get_dep_statuses (airflow/ti_deps/deps/base_ti_dep.py:106)</text></g><g><title>_get_dep_statuses (airflow/ti_deps/deps/trigger_rule_dep.py:87) (56 samples, 2.48%)</title><rect x="97.4790%" y="580" width="2.4768%" height="15" fill="rgb(221,78,26)"/><text x="97.7290%" y="590.50">_g..</text></g><g><title>all (2,261 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(250,127,30)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (airflow:37) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(230,49,44)"/><text x="0.2500%" y="62.50">&lt;module&gt; (airflow:37)</text></g><g><title>wrapper (airflow/utils/cli.py:76) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(229,67,23)"/><text x="0.2500%" y="78.50">wrapper (airflow/utils/cli.py:76)</text></g><g><title>scheduler (airflow/bin/cli.py:1213) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(249,83,47)"/><text x="0.2500%" y="94.50">scheduler (airflow/bin/cli.py:1213)</text></g><g><title>run (airflow/jobs/base_job.py:218) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(215,43,3)"/><text x="0.2500%" y="110.50">run (airflow/jobs/base_job.py:218)</text></g><g><title>_execute (airflow/jobs/scheduler_job.py:1399) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(238,154,13)"/><text x="0.2500%" y="126.50">_execute (airflow/jobs/scheduler_job.py:1399)</text></g><g><title>_execute_helper (airflow/jobs/scheduler_job.py:1442) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="132" width="100.0000%" height="15" fill="rgb(219,56,2)"/><text x="0.2500%" y="142.50">_execute_helper (airflow/jobs/scheduler_job.py:1442)</text></g><g><title>start (airflow/utils/dag_processing.py:560) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="148" width="100.0000%" height="15" fill="rgb(233,0,4)"/><text x="0.2500%" y="158.50">start (airflow/utils/dag_processing.py:560)</text></g><g><title>start (multiprocessing/process.py:105) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="164" width="100.0000%" height="15" fill="rgb(235,30,7)"/><text x="0.2500%" y="174.50">start (multiprocessing/process.py:105)</text></g><g><title>_Popen (multiprocessing/context.py:277) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="180" width="100.0000%" height="15" fill="rgb(250,79,13)"/><text x="0.2500%" y="190.50">_Popen (multiprocessing/context.py:277)</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="196" width="100.0000%" height="15" fill="rgb(211,146,34)"/><text x="0.2500%" y="206.50">__init__ (multiprocessing/popen_fork.py:19)</text></g><g><title>_launch (multiprocessing/popen_fork.py:73) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="212" width="100.0000%" height="15" fill="rgb(228,22,38)"/><text x="0.2500%" y="222.50">_launch (multiprocessing/popen_fork.py:73)</text></g><g><title>_bootstrap (multiprocessing/process.py:258) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="228" width="100.0000%" height="15" fill="rgb(235,168,5)"/><text x="0.2500%" y="238.50">_bootstrap (multiprocessing/process.py:258)</text></g><g><title>run (multiprocessing/process.py:93) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="244" width="100.0000%" height="15" fill="rgb(221,155,16)"/><text x="0.2500%" y="254.50">run (multiprocessing/process.py:93)</text></g><g><title>_run_processor_manager (airflow/utils/dag_processing.py:634) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="260" width="100.0000%" height="15" fill="rgb(215,215,53)"/><text x="0.2500%" y="270.50">_run_processor_manager (airflow/utils/dag_processing.py:634)</text></g><g><title>start (airflow/utils/dag_processing.py:886) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="276" width="100.0000%" height="15" fill="rgb(223,4,10)"/><text x="0.2500%" y="286.50">start (airflow/utils/dag_processing.py:886)</text></g><g><title>start_new_processes (airflow/utils/dag_processing.py:1250) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="292" width="100.0000%" height="15" fill="rgb(234,103,6)"/><text x="0.2500%" y="302.50">start_new_processes (airflow/utils/dag_processing.py:1250)</text></g><g><title>start (airflow/jobs/scheduler_job.py:201) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="308" width="100.0000%" height="15" fill="rgb(227,97,0)"/><text x="0.2500%" y="318.50">start (airflow/jobs/scheduler_job.py:201)</text></g><g><title>start (multiprocessing/process.py:105) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="324" width="100.0000%" height="15" fill="rgb(234,150,53)"/><text x="0.2500%" y="334.50">start (multiprocessing/process.py:105)</text></g><g><title>_Popen (multiprocessing/context.py:277) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="340" width="100.0000%" height="15" fill="rgb(228,201,54)"/><text x="0.2500%" y="350.50">_Popen (multiprocessing/context.py:277)</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="356" width="100.0000%" height="15" fill="rgb(222,22,37)"/><text x="0.2500%" y="366.50">__init__ (multiprocessing/popen_fork.py:19)</text></g><g><title>_launch (multiprocessing/popen_fork.py:73) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="372" width="100.0000%" height="15" fill="rgb(237,53,32)"/><text x="0.2500%" y="382.50">_launch (multiprocessing/popen_fork.py:73)</text></g><g><title>_bootstrap (multiprocessing/process.py:258) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="388" width="100.0000%" height="15" fill="rgb(233,25,53)"/><text x="0.2500%" y="398.50">_bootstrap (multiprocessing/process.py:258)</text></g><g><title>run (multiprocessing/process.py:93) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="404" width="100.0000%" height="15" fill="rgb(210,40,34)"/><text x="0.2500%" y="414.50">run (multiprocessing/process.py:93)</text></g><g><title>_run_file_processor (airflow/jobs/scheduler_job.py:159) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="420" width="100.0000%" height="15" fill="rgb(241,220,44)"/><text x="0.2500%" y="430.50">_run_file_processor (airflow/jobs/scheduler_job.py:159)</text></g><g><title>wrapper (airflow/utils/db.py:74) (2,261 samples, 100.00%)</title><rect x="0.0000%" y="436" width="100.0000%" height="15" fill="rgb(235,28,35)"/><text x="0.2500%" y="446.50">wrapper (airflow/utils/db.py:74)</text></g><g><title>process_file (airflow/jobs/scheduler_job.py:1637) (1,577 samples, 69.75%)</title><rect x="30.2521%" y="452" width="69.7479%" height="15" fill="rgb(210,56,17)"/><text x="30.5021%" y="462.50">process_file (airflow/jobs/scheduler_job.py:1637)</text></g><g><title>_process_dags (airflow/jobs/scheduler_job.py:1316) (1,577 samples, 69.75%)</title><rect x="30.2521%" y="468" width="69.7479%" height="15" fill="rgb(224,130,29)"/><text x="30.5021%" y="478.50">_process_dags (airflow/jobs/scheduler_job.py:1316)</text></g><g><title>wrapper (airflow/utils/db.py:74) (1,577 samples, 69.75%)</title><rect x="30.2521%" y="484" width="69.7479%" height="15" fill="rgb(235,212,8)"/><text x="30.5021%" y="494.50">wrapper (airflow/utils/db.py:74)</text></g><g><title>_process_task_instances (airflow/jobs/scheduler_job.py:813) (1,559 samples, 68.95%)</title><rect x="31.0482%" y="500" width="68.9518%" height="15" fill="rgb(223,33,50)"/><text x="31.2982%" y="510.50">_process_task_instances (airflow/jobs/scheduler_job.py:813)</text></g><g><title>wrapper (airflow/utils/db.py:70) (1,544 samples, 68.29%)</title><rect x="31.7116%" y="516" width="68.2884%" height="15" fill="rgb(219,149,13)"/><text x="31.9616%" y="526.50">wrapper (airflow/utils/db.py:70)</text></g><g><title>are_dependencies_met (airflow/models/taskinstance.py:659) (1,544 samples, 68.29%)</title><rect x="31.7116%" y="532" width="68.2884%" height="15" fill="rgb(250,156,29)"/><text x="31.9616%" y="542.50">are_dependencies_met (airflow/models/taskinstance.py:659)</text></g><g><title>get_failed_dep_statuses (airflow/models/taskinstance.py:683) (1,543 samples, 68.24%)</title><rect x="31.7559%" y="548" width="68.2441%" height="15" fill="rgb(216,193,19)"/><text x="32.0059%" y="558.50">get_failed_dep_statuses (airflow/models/taskinstance.py:683)</text></g></svg></svg>
